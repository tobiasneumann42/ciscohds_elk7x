input {
        udp {
                type => "CiscoHDS"
                port => "5513"
        }
        tcp {
                type => "CiscoHDS"
                port => "5514"
        }
	tcp {
		type => "CiscoHDS"
		port => "5515"
		ssl_cert => "/usr/share/logstash/config/certs/logstash/logstash.crt"
		ssl_enable => true
		ssl_key => "/usr/share/logstash/config/certs/logstash/logstash.key"
		ssl_verify => false
	}	
}

filter {
        if [type] == "CiscoHDS" {
                grok {
                        patterns_dir => ["/usr/share/logstash/pattern"]
                        match => [
                                "message", "%{CISCOHDS001}",
                                "message", "%{CISCOHDS002}",
                                "message", "%{CISCOHDS003}",
                                "message", "%{CISCOHDS004}",
                                "message", "%{CISCOHDS005}",
				"message", "%{CISCOHDS006}",
				"message", "%{CISCOHDS007}",
				"message", "%{CISCOHDS008}",
                                "message", "%{CISCOHDS009}",
                                "message", "%{CISCOHDS010}",
                                "message", "%{CISCOHDS011}",
                                "message", "%{CISCOHDS012}",
                                "message", "%{CISCOHDS013}",
                                "message", "%{CISCOHDS014}",
                                "message", "%{CISCOHDS015}",
                                "message", "%{CISCOHDS016}",
                                "message", "%{CISCOHDS017}",
                                "message", "%{CISCOHDS018}",
                                "message", "%{CISCOHDS019}",
				"message", "%{CISCOHDS020}",
				"message", "%{CISCOHDS021}",
				"message", "%{CISCOHDS022}",
				"message", "%{CISCOHDS023}",
				"message", "%{CISCOHDS024}",
				"message", "%{CISCOHDS025}",
				"message", "%{CISCOHDS026}",
				"message", "%{CISCOHDS100}",
                                "message", "%{CISCOHDS101}",
                                "message", "%{CISCOHDS102}",
				"message", "%{CISCOHDS103}",
				"message", "%{CISCOHDS104}",
				"message", "%{CISCOHDS105}",
				"message", "%{CISCOHDS106}",
				"message", "%{CISCOHDS107}",
				"message", "%{CISCOHDS108}",
				"message", "%{CISCOHDS109}"
                        ]
                }
		# CISCOHDS001 parses provided json KMS metrics into json01 object
                # bellow is cleanup and modifiying data types 
                json {
		    source => "json01"
		    target => "KmsMetrics"
                    remove_field => [ "json01" ]
                }
                if [KmsMetrics] {
			date {
                    		match => [ "[KmsMetrics][timestamp]", "UNIX_MS" ]
                    		target => "[KmsMetrics][timestampUTC]"
                    		remove_field => [ "[KmsMetrics][timestamp]" ]
                	}
		}	
		if [ttl1] {
		 	mutate { 
				rename => {
                        		"ttl1" => "[TTL][value01]"
					"ttl2" => "[TTL][value02]"
					"ttl3" => "[TTL][value03]"
					"ttl4" => "[TTL][value04]"
				}
			}
		}
		# CISCOHDS1008 start & end date (sDate/eDate) in UNIX time format not parsed by grok into date format
		date { 
			locale => "en"
			match => [ "sDate", "EEE MMM d HH:mm:ss ZZZ YYYY" ]
			target => "sDate"
		}
		date {
                        locale => "en"
                        match => [ "eDate", "EEE MMM d HH:mm:ss ZZZ YYYY" ]
                        target => "eDate"
                } 
                # CISCOHDS105
                date {
			locale => "en"
			match => [ "publishDate", "UNIX_MS" ]
			target => "publishDate"
		}
		# CISCOHDS106
                date {
                        locale => "en"
                        match => [ "createDate", "UNIX_MS" ]
                        target => "createDate"
                }
        }
}

output {
  elasticsearch {
    hosts    => [ 'elk.dcloud.cisco.com' ]
    user     => 'elastic'
    password => "${ELASTIC_PASSWORD}"  # read password from logstash.keystore
    index => "logstash-%{+YYYY.MM.dd}"
    ssl => true
    cacert => '/usr/share/logstash/config/certs/ca/ca.crt'
    template => '/usr/share/logstash/template/logstash_template.json'
    template_name => "logstash-*"
  }
}
